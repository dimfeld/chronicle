[package]
name = "chronicle-proxy"
version = "0.4.0"
edition = "2021"
description = "LLM Provider Abstraction and Logging"
documentation = "https://docs.rs/chronicle-proxy"
license.workspace = true
authors.workspace = true
readme.workspace = true
repository.workspace = true
keywords.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
async-trait = "0.1.80"
backon = "0.4.4"
bytes = "1.6.0"
chrono = { version = "0.4.38", features = ["serde"] }
error-stack = "0.4.1"
eventsource-stream = "0.2.3"
filigree = { workspace = true, optional = true }
flume = "0.11.0"
futures = "0.3.30"
http = "1.1.0"
itertools = "0.12.1"
rand = "0.8.5"
reqwest = { version = "0.12.3", features = ["json", "stream"] }
schemars = { version = "0.8.16", optional = true }
serde = { version = "1.0.198", features = ["derive"] }
serde_json = "1.0.116"
serde_path_to_error = "0.1.16"
serde_with = "3.8.1"
smallvec = { version = "1.13.2", features = ["union", "const_generics"] }
sqlx = { version = "0.7.4", features = ["chrono", "json", "uuid"] }
sqlx-transparent-json-decode = "2.2.2"
thiserror = "1.0.58"
tokio = { version = "1.37.0", features = ["fs", "macros", "time"] }
tokio-util = { version = "0.7.11", features = ["io"] }
toml = "0.8.12"
tracing = "0.1.40"
url = "2.5.0"
uuid = { version = "1.8.0", features = ["v4", "v7", "serde"] }

[dev-dependencies]
filigree = { workspace = true }
insta = { version = "1.38.0", features = ["json", "redactions"] }
tokio = { version = "1.37.0", features = ["fs", "macros", "rt", "test-util", "time"] }
wiremock = "0.6.0"

[features]
default = ["postgres", "sqlite"]
postgres = ["sqlx/postgres"]
sqlite = ["sqlx/sqlite"]
filigree = ["dep:filigree"]
schemars = ["dep:schemars"]
